{"ast":null,"code":"var _jsxFileName = \"/home/ec2-user/chatGPT/demo-chatgpt-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport axios from 'axios';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput } from \"@chatscope/chat-ui-kit-react\";\nimport { Map, List, Record } from 'immutable';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_GATEWAY_ID = process.env.REACT_APP_API_PATH ? process.env.REACT_APP_API_PATH : \"5yfk3miht8\";\nconst SOCKET_API_GATEWAY_ID = process.env.REACT_APP_SOCKET_API_PATH ? process.env.REACT_APP_SOCKET_API_PATH : \"test\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.closeWebSocket = () => {\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n      if (this.websocket) {\n        this.websocket.close();\n        this.websocket = null;\n      }\n    };\n    this.connectToWebScoket = () => {\n      const address = `wss://${SOCKET_API_GATEWAY_ID}.execute-api.ap-northeast-2.amazonaws.com/dev?user_id=test&room_id=test`;\n      this.websocket = new WebSocket(address);\n      this.websocket.onopen = () => {\n        this.timer = setInterval(() => {\n          this.websocket.send(JSON.stringify({\n            message: 'ping'\n          }));\n        }, 60 * 1000);\n      };\n      this.websocket.onmessage = message => {\n        let obj = JSON.parse(message.data);\n        this.onMessageReceived(obj);\n      };\n      this.websocket.onclose = event => {\n        console.log('onclose');\n        if (this.timer || this.websocket) this.closeWebSocket();\n      };\n      this.websocket.onerror = event => {\n        console.error('WebSocket error observed:', event);\n        if (this.timer || this.websocket) this.closeWebSocket();\n      };\n    };\n    this.componentDidMount = async () => {\n      const {\n        data\n      } = this.state;\n      const result = await axios({\n        method: 'GET',\n        url: `https://${API_GATEWAY_ID}.execute-api.ap-northeast-2.amazonaws.com/dev/chat`,\n        params: {\n          room_id: \"test\"\n        }\n      });\n      ;\n      this.setState({\n        data: data.set(\"messages\", result.data).set(\"user_id\", moment().valueOf())\n      });\n      this.connectToWebScoket();\n    };\n    this.onMessageReceived = async message => {\n      console.log(message);\n      if (message.timestamp) {\n        const {\n          data\n        } = this.state;\n        let list = data.get(\"messages\");\n        list.push(message);\n        console.log(list);\n        this.setState({\n          data: data.set(\"messages\", list)\n        });\n      }\n    };\n    this.onSend = async message => {\n      const {\n        data\n      } = this.state;\n      const result = await axios({\n        method: 'PUT',\n        url: `https://${API_GATEWAY_ID}.execute-api.ap-northeast-2.amazonaws.com/dev/chat`,\n        data: {\n          room_id: \"test\",\n          text: message,\n          user_id: data.get(\"user_id\"),\n          name: \"name_test\"\n        }\n      });\n      ;\n    };\n    this.getMessageList = () => {\n      const {\n        data\n      } = this.state;\n      const userId = data.get(\"user_id\");\n      let messageList = [];\n      const dt = data.get(\"messages\");\n      if (dt) {\n        dt.forEach(message => {\n          messageList.push( /*#__PURE__*/_jsxDEV(Message, {\n            model: {\n              message: message.message,\n              sentTime: \"just now\",\n              sender: \"Joe\",\n              direction: userId == message.user_id ? \"outgoing\" : \"not\"\n            }\n          }, message.timestamp, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 26\n          }, this));\n        });\n      }\n      return messageList;\n    };\n    this.state = {\n      data: Map({\n        messageList: [],\n        messages: []\n      })\n    };\n    this.websocket = undefined;\n    this.timer = undefined;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"500px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(MainContainer, {\n        children: /*#__PURE__*/_jsxDEV(ChatContainer, {\n          children: [/*#__PURE__*/_jsxDEV(MessageList, {\n            children: this.getMessageList()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n            placeholder: \"Type message here\",\n            onSend: this.onSend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","styles","axios","MainContainer","ChatContainer","MessageList","Message","MessageInput","Map","List","Record","moment","jsxDEV","_jsxDEV","API_GATEWAY_ID","process","env","REACT_APP_API_PATH","SOCKET_API_GATEWAY_ID","REACT_APP_SOCKET_API_PATH","App","constructor","props","closeWebSocket","timer","clearInterval","websocket","close","connectToWebScoket","address","WebSocket","onopen","setInterval","send","JSON","stringify","message","onmessage","obj","parse","data","onMessageReceived","onclose","event","console","log","onerror","error","componentDidMount","state","result","method","url","params","room_id","setState","set","valueOf","timestamp","list","get","push","onSend","text","user_id","name","getMessageList","userId","messageList","dt","forEach","model","sentTime","sender","direction","fileName","_jsxFileName","lineNumber","columnNumber","messages","undefined","render","style","position","height","children","placeholder"],"sources":["/home/ec2-user/chatGPT/demo-chatgpt-frontend/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport axios from 'axios';\nimport {\n  MainContainer,\n  ChatContainer,\n  MessageList,\n  Message,\n  MessageInput,\n} from \"@chatscope/chat-ui-kit-react\";\nimport { Map, List, Record } from 'immutable';\nimport moment from 'moment';\n\nconst API_GATEWAY_ID = process.env.REACT_APP_API_PATH ? process.env.REACT_APP_API_PATH : \"5yfk3miht8\"\nconst SOCKET_API_GATEWAY_ID = process.env.REACT_APP_SOCKET_API_PATH ? process.env.REACT_APP_SOCKET_API_PATH : \"test\"\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: Map(\n        {\n          messageList: [],\n          messages: []\n        })\n    }\n    this.websocket = undefined;\n    this.timer = undefined;\n  }\n  closeWebSocket = () => {\n\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = null;\n    }\n    if (this.websocket) {\n      this.websocket.close();\n      this.websocket = null;\n    }\n  }\n  connectToWebScoket = () => {\n    const address = `wss://${SOCKET_API_GATEWAY_ID}.execute-api.ap-northeast-2.amazonaws.com/dev?user_id=test&room_id=test`\n    this.websocket = new WebSocket(address);\n    this.websocket.onopen = () => {\n      this.timer = setInterval(() => {\n        this.websocket.send(JSON.stringify({ message: 'ping' }));\n      }, 60 * 1000);\n    };\n    this.websocket.onmessage = (message) => {\n      let obj = JSON.parse(message.data);\n      this.onMessageReceived(obj);\n    };\n\n    this.websocket.onclose = (event) => {\n      console.log('onclose');\n      if (this.timer || this.websocket) this.closeWebSocket();\n    };\n\n    this.websocket.onerror = (event) => {\n      console.error('WebSocket error observed:', event);\n      if (this.timer || this.websocket) this.closeWebSocket();\n    };\n  }\n  componentDidMount = async () => {\n    const { data } = this.state;\n    const result = await axios({\n      method: 'GET',\n      url: `https://${API_GATEWAY_ID}.execute-api.ap-northeast-2.amazonaws.com/dev/chat`,\n      params: {\n        room_id: \"test\"\n      }\n    });;\n\n    this.setState({\n      data: data.set(\"messages\", result.data).set(\"user_id\", moment().valueOf())\n    })\n\n    this.connectToWebScoket();\n  }\n  onMessageReceived = async (message) => {\n    console.log(message)\n    if (message.timestamp) {\n      const { data } = this.state;\n      let list = data.get(\"messages\");\n      list.push(message)\n      console.log(list);\n      this.setState({\n        data: data.set(\"messages\", list)\n      })\n    }\n  }\n  onSend = async (message) => {\n    const { data } = this.state;\n    const result = await axios({\n      method: 'PUT',\n      url: `https://${API_GATEWAY_ID}.execute-api.ap-northeast-2.amazonaws.com/dev/chat`,\n      data: {\n        room_id: \"test\",\n        text: message,\n        user_id: data.get(\"user_id\"),\n        name: \"name_test\"\n\n      }\n    });;\n  }\n  getMessageList = () => {\n    const { data } = this.state;\n    const userId = data.get(\"user_id\");\n    let messageList = [];\n    const dt = data.get(\"messages\");\n    if (dt) {\n      dt.forEach((message) => {\n        messageList.push(<Message\n          key={message.timestamp}\n          model={{\n            message: message.message,\n            sentTime: \"just now\",\n            sender: \"Joe\",\n            direction: (userId == message.user_id) ? \"outgoing\" : \"not\",\n          }}\n        />\n        );\n      })\n    }\n    return messageList;\n  }\n\n  render() {\n    return (\n      <div style={{ position: \"relative\", height: \"500px\" }}>\n        <MainContainer>\n          <ChatContainer>\n            <MessageList>\n              {this.getMessageList()}\n            </MessageList>\n            <MessageInput placeholder=\"Type message here\" onSend={this.onSend} />\n          </ChatContainer>\n        </MainContainer>\n      </div>\n    )\n  }\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}